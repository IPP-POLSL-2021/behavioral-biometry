// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Context;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230429100913_test3")]
    partial class test3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("backend.Models.AccessTokens", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("accessTokens");
                });

            modelBuilder.Entity("backend.Models.Prompt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("prompts");
                });

            modelBuilder.Entity("backend.Models.PromptData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DD_k1_k2")
                        .HasColumnType("int");

                    b.Property<int>("DD_k2_k3")
                        .HasColumnType("int");

                    b.Property<int>("DD_k3_k4")
                        .HasColumnType("int");

                    b.Property<int>("DD_k4_k5")
                        .HasColumnType("int");

                    b.Property<int>("DD_k5_k6")
                        .HasColumnType("int");

                    b.Property<int>("DD_k6_k7")
                        .HasColumnType("int");

                    b.Property<int>("DD_k7_k8")
                        .HasColumnType("int");

                    b.Property<int>("DD_k8_k9")
                        .HasColumnType("int");

                    b.Property<int>("DD_k9_k10")
                        .HasColumnType("int");

                    b.Property<int>("DU_k1_k2")
                        .HasColumnType("int");

                    b.Property<int>("DU_k2_k3")
                        .HasColumnType("int");

                    b.Property<int>("DU_k3_k4")
                        .HasColumnType("int");

                    b.Property<int>("DU_k4_k5")
                        .HasColumnType("int");

                    b.Property<int>("DU_k5_k6")
                        .HasColumnType("int");

                    b.Property<int>("DU_k6_k7")
                        .HasColumnType("int");

                    b.Property<int>("DU_k7_k8")
                        .HasColumnType("int");

                    b.Property<int>("DU_k8_k9")
                        .HasColumnType("int");

                    b.Property<int>("DU_k9_k10")
                        .HasColumnType("int");

                    b.Property<int>("H_k1")
                        .HasColumnType("int");

                    b.Property<int>("H_k10")
                        .HasColumnType("int");

                    b.Property<int>("H_k2")
                        .HasColumnType("int");

                    b.Property<int>("H_k3")
                        .HasColumnType("int");

                    b.Property<int>("H_k4")
                        .HasColumnType("int");

                    b.Property<int>("H_k5")
                        .HasColumnType("int");

                    b.Property<int>("H_k6")
                        .HasColumnType("int");

                    b.Property<int>("H_k7")
                        .HasColumnType("int");

                    b.Property<int>("H_k8")
                        .HasColumnType("int");

                    b.Property<int>("H_k9")
                        .HasColumnType("int");

                    b.Property<int>("PromptId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PromptId");

                    b.HasIndex("UserId");

                    b.ToTable("PromptData");
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("backend.Models.testModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Name")
                        .HasMaxLength(150)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("testModel");
                });

            modelBuilder.Entity("backend.Models.AccessTokens", b =>
                {
                    b.HasOne("backend.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("backend.Models.PromptData", b =>
                {
                    b.HasOne("backend.Models.Prompt", "Prompt")
                        .WithMany()
                        .HasForeignKey("PromptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prompt");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
